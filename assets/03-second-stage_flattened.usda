#usda 1.0
(
    doc = """Generated from Composed Stage of root layer C:\\Users\\SIP4BE\\Documents\\Workspace\\Playground\\learn-open-usd\\assets\\03-second-stage.usda
"""
)

def Xform "Geometry"
{
    def Xform "GroupTransform"
    {
        def Mesh "Box"
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-1, -1, 1), (1, -1, 1), (-1, 1, 1), (1, 1, 1), (-1, 1, -1), (1, 1, -1), (-1, -1, -1), (1, -1, -1)]
        }
    }
}

def Xform "Lights"
{
    def Xform "Sun"
    {
        color3f inputs:color = (1, 0, 0)
        float inputs:intensity = 120
        matrix4d xformOp:transform = ( (0.7853981633974483, 0, -0.7853981633974483, 0), (0, 1, 0, 0), (0.7853981633974483, 0, 0.7853981633974483, 0), (10, 0, 10, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Xform "SphereLight"
    {
        color3f inputs:color = (0, 0, 1)
        float inputs:intensity = 50000
        matrix4d xformOp:transform = ( (0.7853981633974483, 0, 0.7853981633974483, 0), (0, 1, 0, 0), (-0.7853981633974483, 0, 0.7853981633974483, 0), (-10, 0, 10, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

